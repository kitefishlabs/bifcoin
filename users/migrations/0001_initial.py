# Generated by Django 2.2.3 on 2019-07-16 16:10

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='EmailUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BifCoinUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('proposal_email', models.EmailField(max_length=100, null=True)),
                ('balance', models.IntegerField()),
                ('state', models.CharField(choices=[('unclaimed', 'unclaimed'), ('claimed', 'claimed'), ('abandoned', 'abandoned')], max_length=9)),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SpentCoins',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('art', models.CharField(choices=[('random poetry', 'poetry'), ('random ascii art', 'art')], max_length=15)),
                ('art_payload', models.TextField()),
                ('amount', models.IntegerField()),
                ('sender', models.ManyToManyField(related_name='spent_coins', to='users.BifCoinUser')),
            ],
        ),
        migrations.CreateModel(
            name='GiftedCoins',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('amount', models.IntegerField()),
                ('recipient', models.ManyToManyField(to='users.BifCoinUser')),
                ('sender', models.ManyToManyField(related_name='gifted_coins', to='users.BifCoinUser')),
            ],
        ),
        migrations.CreateModel(
            name='EarnedCoins',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('action', models.CharField(choices=[('social media', 'social'), ('note', 'note'), ('feedback', 'feedback')], max_length=12)),
                ('action_payload', models.TextField()),
                ('amount', models.IntegerField()),
                ('recipient', models.ManyToManyField(to='users.BifCoinUser')),
            ],
        ),
        migrations.CreateModel(
            name='ClaimedProposal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('proposal_id', models.IntegerField()),
                ('proposal_name', models.CharField(max_length=100)),
                ('proposal_datetime', models.DateTimeField()),
                ('proposal_email', models.EmailField(max_length=100, null=True)),
                ('state', models.CharField(choices=[('unclaimed', 'unclaimed'), ('claimed', 'claimed'), ('abandoned', 'abandoned')], max_length=9)),
                ('cancelled', models.BooleanField()),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.BifCoinUser')),
            ],
        ),
    ]
